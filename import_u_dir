#!/usr/bin/python3

# ~/dev/py/upax/importUDir

import os
import re
import sys
import time
from argparse import ArgumentParser

from xlattice import (u, QQQ, check_using_sha,
                      parse_using_sha, fix_using_sha, show_using_sha, check_u_path)

from upax import *


def main():

    pgm_name_and_version = "importUDir v%s" % (__version__)
    timestamp = "%04d%02d%02d-%02d%02d%02d" % time.gmtime()[:6]

    # -- program defaults -------------------------------------------
    dest_dir = None

    # -- check for config file --------------------------------------

    # -- parse the command line -------------------------------------
    # see docs.python.org/library/argparse.html
    parser = ArgumentParser()

    parser.add_argument('-d', '--dest_dir', type=str,
                        help='base name of destination U/ directory')

    parser.add_argument('-j', '--just_show', action='store_true',
                        help='show args and exit')

    parser.add_argument('-t', '--show_timestamp', action='store_true',
                        help='show run timestamp')

    parser.add_argument('-T', '--testing', action='store_true',
                        help='test run - write to ./testU')

    parser.add_argument('-V', '--show_version', action='store_true',
                        help='show version number and date')

    parse_using_sha(parser)
    args = parser.parse_args()      # a Namespace object

    # -- fixups -----------------------------------------------------
    fix_using_sha(args)
    args.pgm_name_and_version = pgm_name_and_version
    args.timestamp = timestamp

    # -- sanity checks ----------------------------------------------
    check_using_sha(args.using_sha)
    check_u_path(parser, args, must_exist=True)

    if (args.dest_dir is None):
        print("you must specify a destination U directory")
        sys.exit(1)
    if not os.path.exists(args.dest_dir):
        print("directory does not exist: '%s'" % args.dest_dir)
        sys.exit(1)
    if not os.path.isdir(args.dest_dir):
        print("not a directory: '%s'" % args.dest_dir)
        sys.exit(1)

    # fixups --------------------------------------------------------
    if args.dest_dir and args.dest_dir[-1] == '/':
        args.dest_dir = args.dest_dir[:-1]            # drop any trailing slash

    # -- do it ------------------------------------------------------
    if args.verbose or args.show_version or args.just_show:
        print(args.pgm_name_and_version)
    if args.show_timestamp:
        print('run at %s GMT' % timestamp)   # could be prettier
    else:
        print()                               # there's a comma up there

    if args.just_show or args.verbose:
        print('dest_dir         = ' + str(args.dest_dir))
        print('just_show        = ' + str(args.just_show))
        print('show_timestamp   = ' + str(args.show_timestamp))
        print('show_version     = ' + str(args.show_version))
        print('timestamp        = ' + str(args.timestamp))
        show_using_sha(args)

    if not args.just_show:
        lock = u.ULock(args.u_path)
        try:
            if lock.get_lock():
                if args.verbose:
                    print('have lock on ' + args.u_path)
                importer = Importer.create_importer(args)
                importer.do_import_u_dir()
            else:
                print('could not get lock on %s' % args.u_path)
        finally:
            if args.verbose:
                print('releasing lock on ' + args.u_path)
            lock.release_lock()

if __name__ == '__main__':
    main()
